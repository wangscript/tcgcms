<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TCG.Utils</name>
    </assembly>
    <members>
        <member name="M:TCG.Utils.errHandlers.GetErrTextByErrCode(System.Int32,System.String)">
            <summary>
            根据错误ID获得错误信息
            </summary>
            <param name="errCode"></param>
        </member>
        <member name="T:TCG.Utils.objectHandlers">
            <summary>
            基础操作类
            </summary>
        </member>
        <member name="M:TCG.Utils.objectHandlers.NotNull(System.Object)">
            <summary>
            对象是否非空
            为空返回 false
            不为空返回 true
            </summary>
            <param name="Object">要判断的对象</param>
            <returns>bool值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.NotNull(System.Object,System.Boolean)">
            <summary>
            对象是否非空
            为空返回 false
            不为空返回 true
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsRemoveSpace">是否去除空格</param>
            <returns>bool值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsNull(System.Object)">
            <summary>
            对象是否为空
            为空返回 false
            不为空返回 true
            </summary>
            <param name="Object">要判断的对象</param>
            <returns>bool值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsNull(System.Object,System.Boolean)">
            <summary>
            对象是否为空
            为空返回 false
            不为空返回 true
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsRemoveSpace">是否去除空格</param>
            <returns>bool值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsBool(System.Object)">
            <summary>
            对象是否为bool值
            </summary>
            <param name="Object">要判断的对象</param>
            <returns>bool值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsBool(System.Object,System.Boolean)">
            <summary>
            判断是否为bool值
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="Default">默认bool值</param>
            <returns>bool值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsMail(System.String)">
            <summary>
            是否邮件地址
            </summary>
            <param name="Mail">等待验证的邮件地址</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsHttp(System.String)">
            <summary>
            是否URL地址
            </summary>
            <param name="HttpUrl">等待验证的Url地址</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Left(System.Object,System.Int32)">
            <summary>
            取字符左函数
            </summary>
            <param name="Object">要操作的 string  数据</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Mid(System.String,System.Int32,System.Int32)">
            <summary>
            取字符中间函数
            </summary>
            <param name="Object">要操作的 string  数据</param>
            <param name="StarIndex">开始的位置索引</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Right(System.Object,System.Int32)">
            <summary>
            取字符右函数
            </summary>
            <param name="Object">要操作的 string  数据</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.MD5(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="Object">要操作的 string  数据</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsHttpUrl(System.String)">
            <summary>
            判断是否包含Http头的地址
            </summary>
            <param name="Object">要操作的对象</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.AddColors(System.String,System.String,System.String)">
            <summary>
            关键字上色处理
            </summary>
            <param name="Object">要操作的 string  数据</param>
            <param name="Keys">关键字</param>
            <param name="Style">样式名称</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.AddZeros(System.Int32,System.Int32)">
            <summary>
            数字前导加0
            </summary>
            <param name="Int">要操作的 int  数据</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.AddZeros(System.String,System.Int32)">
            <summary>
            数字前导加0
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="MaxLength">默认长度不加0</param>
            <returns>字符</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToLoadID(System.String)">
            <summary>
            重新获取所有ID排序
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>字符</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IntToChar(System.Int32)">
            <summary>
            字符 int  转换为 char
            </summary>
            <param name="Int">字符[int]</param>
            <returns>char</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IntToString(System.Int32)">
            <summary>
            字符 int  转换为字符 string
            </summary>
            <param name="Int">字符 int</param>
            <returns>字符 string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.StringToInt(System.String)">
            <summary>
            字符 string  转换为字符 int
            </summary>
            <param name="Strings">字符 string</param>
            <returns>字符 int</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.StringToChar(System.String)">
            <summary>
            字符 string  转换为 char
            </summary>
            <param name="Strings">字符 string</param>
            <returns>char</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsInt(System.Object,System.Boolean@)">
            <summary>
            对象是否为 int  类型数据
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsTrue">返回是否转换成功</param>
            <returns>int值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToInt(System.Object)">
            <summary>
            转换成为 int  数据
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>int 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToInt(System.Object,System.Int32)">
            <summary>
            转换成为 int  数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <returns>int 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToInt(System.Object,System.Int32,System.Int32)">
            <summary>
            转换成为 int  数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinInt"> 下界限定的最小值 , 若超过范围 , 则返回 默认值</param>
            <returns>int 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToInt(System.Object,System.Int32,System.Int32,System.Int32)">
            <summary>
            转换成为 int  数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinInt"> 下界限定的最小值 , 若超过范围 , 则返回 默认值</param>
            <param name="MaxInt">上界限定的最大值 , 若超过范围 , 则返回 默认值</param>
            <returns>int 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsLong(System.Object,System.Boolean@)">
            <summary>
            对象是否为 long  类型数据
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsTrue">返回是否转换成功</param>
            <returns>long值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToLong(System.Object)">
            <summary>
            转换成为 Long 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>Long 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToLong(System.Object,System.Int64)">
            <summary>
            转换成为 Long 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <returns>Long 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToLong(System.Object,System.Int64,System.Int64)">
            <summary>
            转换成为 long 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">转换不成功返回的默认值</param>
            <param name="MinLong">下界限定的最小值 , 若超过范围 , 则返回 默认值</param>
            <returns>long 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToLong(System.Object,System.Int64,System.Int64,System.Int64)">
            <summary>
            转换成为 long 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinLong">下界限定的最小值 , 若超过范围 , 则返回 默认值</param>
            <param name="MaxLong">上界限定的最大值 , 若超过范围 , 则返回 默认值</param>
            <returns>long 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsFloat(System.Object,System.Boolean@)">
            <summary>
            对象是否为 float  类型数据
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsTrue">返回是否转换成功</param>
            <returns>float值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToFloat(System.Object)">
            <summary>
            转换成为 float 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>float 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToFloat(System.Object,System.Single)">
            <summary>
            转换成为 float 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <returns>float 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToFloat(System.Object,System.Single,System.Single)">
            <summary>
            转换成为 float 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinFloat"> 小于等于 转换成功后,下界限定的最小值,若超过范围 则返回 默认值</param>
            <returns>float 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToFloat(System.Object,System.Single,System.Single,System.Single)">
            <summary>
            转换成为 float 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinFloat"> 下界限定的最小值 , 若超过范围 , 则返回 默认值</param>
            <param name="MaxFloat"> 上界限定的最大值 , 若超过范围 , 则返回 默认值</param>
            <returns>float 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToBoolen(System.Object,System.Boolean)">
            <summary>
            转换为BOOL
            </summary>
            <param name="Object"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsDecimal(System.Object,System.Boolean@)">
            <summary>
            对象是否为 decimal  类型数据
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsTrue">返回是否转换成功</param>
            <returns>decimal值</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToDecimal(System.Object)">
            <summary>
            转换成为 decimal 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>decimal 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToDecimal(System.Object,System.Decimal)">
            <summary>
            转换成为 decimal 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <returns>decimal 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToDecimal(System.Object,System.Decimal,System.Decimal)">
            <summary>
            转换成为 decimal 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinFloat"> 小于等于 转换成功后,下界限定的最小值,若超过范围 则返回 默认值</param>
            <returns>decimal 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToDecimal(System.Object,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            转换成为 decimal 数据
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="Default">默认值</param>
            <param name="MinDecimal"> 下界限定的最小值 , 若超过范围 , 则返回 默认值</param>
            <param name="MaxDecimal"> 上界限定的最大值 , 若超过范围 , 则返回 默认值</param>
            <returns>decimal 数据</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsTime(System.Object,System.Boolean@)">
            <summary>
            是否为时间格式
            </summary>
            <param name="Object">要判断的对象</param>
            <param name="IsTrue">返回是否转换成功</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToTime(System.String)">
            <summary>
            操作 DateTime  数据
            </summary>
            <param name="Object">要操作的字符</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToTime(System.String,System.DateTime)">
            <summary>
            字符串转换为时间函数
            </summary>
            <param name="Object">要操作的字符</param>
            <param name="Default">默认时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToNow(System.String)">
            <summary>
            获得当前时间
            </summary>
            <param name="Style">时间样式</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToTimes(System.String)">
            <summary>
            转换字符串为格式化时间字符串
            </summary>
            <param name="Object">要操作的字符</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToTimes(System.String,System.String)">
            <summary>
            转换字符串为格式化时间字符串
            </summary>
            <param name="Object">要操作的字符</param>
            <param name="Style">格式化样式</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToTimes(System.String,System.DateTime)">
            <summary>
            转换字符串为格式化时间字符串
            </summary>
            <param name="Object">要操作的字符</param>
            <param name="Default">默认时间</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToTimes(System.String,System.DateTime,System.String)">
            <summary>
            转换字符串为格式化时间字符串
            </summary>
            <param name="Object">要操作的字符</param>
            <param name="Default">默认时间</param>
            <param name="Style">格式化样式</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToPowerValue(System.Char[],System.Int32)">
            <summary>
            判断权限 返回当前索引的权限的数字
            </summary>
            <param name="PowerChars">权限数组</param>
            <param name="Index">当前权限数组中某个权限的索引</param>
            <returns>int</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsPower(System.Char[],System.Int32)">
            <summary>
            获取当前权限数组中某个索引的权限
            </summary>
            <param name="PowerChars">权限数组</param>
            <param name="Index">当前权限数组中某个权限的索引</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsPower(System.String,System.Int32)">
            <summary>
            获取当前权限字符串中某个索引的权限
            </summary>
            <param name="Powers">权限字符串 101110000的形式</param>
            <param name="Index">当前权限数组中某个权限的索引</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetPower(System.Char[])">
            <summary>
            将权限数组切换到权限字符串
            </summary>
            <param name="PowerChars">PowerChars 权限数组</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetPower(System.Char[],System.Int32,System.String)">
            <summary>
            在权限数组中更改某个索引的权限
            并返回权限数组
            </summary>
            <param name="PowerChars">PowerChars 权限数组</param>
            <param name="Index">当前权限数组中某个权限的索引</param>
            <param name="PowerValue">要更改的值</param>
            <returns>新的char[]权限数组</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetPowers(System.Char[],System.Int32,System.String)">
            <summary>
            在权限数组中更改某个索引的权限
            并返回权限字符串
            </summary>
            <param name="PowerChars">PowerChars 权限数组</param>
            <param name="Index">当前权限数组中某个权限的索引</param>
            <param name="PowerValue">要更改的值</param>
            <returns>权限字符串</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetPowers(System.String,System.Int32,System.String)">
            <summary>
            在权限字符串中更改某个索引的权限
            并返回权限字符串
            </summary>
            <param name="Powers">权限字符串</param>
            <param name="Index">当前权限数组中某个权限的索引</param>
            <param name="PowerValue">要更改的值</param>
            <returns>权限字符串</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Precede(System.String,System.String)">
            <summary>
            判断上一符号和当前符号 并返回罗马值
            可以操作普通的加减乘除
            </summary>
            <param name="Operator1">string</param>
            <param name="Operator2">string</param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Result(System.Char,System.Double,System.Double)">
            <summary>
            计算当前2个值的结果
            </summary>
            <param name="Operator">运算符号</param>
            <param name="Value1">值1</param>
            <param name="Value2">值2</param>
            <returns>Double</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.VcEval(System.String)">
            <summary>
            VC的eval算法
            </summary>
            <param name="Expression">要计算的表达式</param>
            <returns>Object</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.RandInt(TCG.Utils.objectHandlers.RandEnum)">
            <summary>
            获取随机数类型枚举对应的数字
            </summary>
            <param name="Enum">产生随机数的枚举类型</param>
            <returns>int</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetGuid">
            <summary>
            获取全局唯一GUID 值
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetGuid(System.Int32)">
            <summary>
            获取当前时间的刻度值
            </summary>
            <param name="MaxLength">最大长度</param>
            <returns>int</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetGuid(System.Int32,System.Boolean)">
            <summary>
            获取全局唯一GUID 值
            </summary>
            <param name="MaxLength">最大长度</param>
            <param name="IsRemove">是否去掉特殊字符</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetGuid(TCG.Utils.objectHandlers.RandEnum,System.Int32)">
            <summary>
            获取指定类型的随机数
            </summary>
            <param name="Enum">产生随机数的枚举类型</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetGuid(TCG.Utils.objectHandlers.RandEnum,System.String,System.Int32)">
            <summary>
            获取指定类型的随机数
            </summary>
            <param name="Enum">产生随机数的枚举类型</param>
            <param name="Encode">产生随机中文的编码</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetGuid(System.String,System.Int32)">
            <summary>
            获取随机产生的中文
            </summary>
            <param name="Encode">产生随机中文的编码</param>
            <param name="MaxLength">最大长度</param>
            <returns>string</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsChinese(System.String)">
            <summary>
            是否汉字
            </summary>
            <param name="Object">单个字符</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsChinese(System.Char)">
            <summary>
            是否汉字
            </summary>
            <param name="Object">单个字符 char</param>
            <returns>bool</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetLength(System.String,System.Boolean)">
            <summary>
            获取字符串的长度
            </summary>
            <param name="Object">要检测的对象</param>
            <param name="IsChecked">是否判断汉字</param>
            <returns>int</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.CheckLength(System.String,System.Int32,System.Int32)">
            <summary>
            检测长度
            </summary>
            <param name="Object">要转换的对象</param>
            <param name="MinInt">小于等于 最小长度</param>
            <param name="MaxInt">大于等于 最大长度</param>
            <returns>符合?true:false</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.CheckLength(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检测长度
            </summary>
            <param name="Object">要检测的对象</param>
            <param name="MinInt">小于等于 最小长度</param>
            <param name="MaxInt">大于等于 最大长度</param>
            <param name="IsChecked">是否判断汉字</param>
            <returns>符合?true:false</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.HtmlDecode(System.String)">
            <summary>
            文本操作 执行HTML解码
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>字符</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.HtmlEncode(System.String)">
            <summary>
            文本操作 执行HTML编码
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>字符</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.TextDecode(System.String)">
            <summary>
            文本操作 执行TEXT解码
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>字符</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.TextEncode(System.String)">
            <summary>
            文本操作 执行TEXT编码
            </summary>
            <param name="Object">要转换的对象</param>
            <returns>字符</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetMod(System.String)">
            <summary>
            获取当前单个字符 所对应的规定的模的值
            字母占26个数据表
            其他字符(包含汉字)占24个数据表
            一共50个用户总表
            </summary>
            <param name="Object">单个字符</param>
            <returns>int</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.DateDiff(System.DateTime,System.DateTime)">
            <summary>
            获取2个时间之间的时间差
            </summary>
            <param name="StarTime">第一个时间</param>
            <param name="EndTime">第二个时间</param>
            <returns>double</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.CleanFormat(System.String)">
            <summary>
            清楚页面格式
            </summary>
            <param name="Object"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToString(System.Object)">
            <summary>
            转换为字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetIP">
            <summary>
            获得用户的IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.DateDiff(System.DateTime)">
            <summary>
            计算一个时间与当前本地日期和时间的时间间隔,返回的是时间间隔的日期差的绝对值.
            </summary>
            <param name="StarTime">一个日期和时间</param>
            <returns>double</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Get(System.String)">
            <summary>
            获取参数值 QueryString
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Get(System.String,TCG.Entity.CheckGetEnum)">
            <summary>
            获取参数值 QueryString
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.Post(System.String)">
            <summary>
            获取参数值 Form
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.SetCookie(System.String,System.String,System.String)">
            <summary>
            设置Cookie(Cookie信息不会保存到用户的硬盘)
            </summary>
            <param name="as_CookieName"></param>
            <param name="as_CookieValue"></param>
            <param name="as_Domain"></param>
        </member>
        <member name="M:TCG.Utils.objectHandlers.SetCookie(System.String,System.String,System.String,System.Int32)">
            <summary>
            设置Cookie(Cookie信息根据失效时间保存到用户的硬盘)
            </summary>
            <param name="as_CookieName"></param>
            <param name="as_CookieValue"></param>
            <param name="as_Domain"></param>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetCookie(System.String)">
            <summary>
            获取COOKIE对象
            </summary>
            <param name="as_CookieName"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.JSEncode(System.String)">
            <summary>
            JS字符串格式化
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.SqlEndcode(System.String)">
            <summary>
            SQL语句个格式化
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ConvertObjectToString(System.Object)">
            <summary>
            将object转换成string对象
            </summary>
            <param name="Data">需要转换得object对象</param>
            <param name="theType">IList中实际所包含得对象类型</param>
            <returns>DataSet类型对象</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ConvertStringToObject(System.String,System.Object@)">
            <summary>
            将object转换成string对象
            </summary>
            <param name="Data">需要转换得object对象</param>
            <param name="theType">IList中实际所包含得对象类型</param>
            <returns>DataSet类型对象</returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.MapPath(System.String)">
            <summary>
            获得相对路径的磁盘路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToSBC(System.String)">
            <summary>
            半角转全角
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToDBC(System.String)">
            <summary>
            全角转半角
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.RandomStr(System.Int32)">
            <summary>
            生成字母和数字的随即数
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.SaveFile(System.String,System.String)">
            <summary>
            保存文件
            </summary>
            <param name="filepath"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetTextFromHtml(System.String)">
            <summary>
            去掉HTML标签
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ReplaceBD(System.String)">
            <summary>
            去掉标点符号
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToAsc(System.String)">
            <summary>
            字符串转换为ASCII
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.ToChr(System.Int32)">
            <summary>
            ASCII转化为字符串
            </summary>
            <param name="asciiCode"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetStringAscSum(System.String)">
            <summary>
            获得字符串的ASCII码的和
            </summary>
            <param name="str">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.CheckValiCode(System.String)">
            <summary>
            检测验证码是否正确
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.IsMatch(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GenerateToken(System.String)">
            <summary>
            COOKIE加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetUserClubLevel(System.Int32)">
            <summary>
            得到用户的属性
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.GetTemplateType(System.Int32)">
            <summary>
            得到模板类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:TCG.Utils.objectHandlers.UnZip(System.String[])">
            
            解压文件
            
            包含要解压的文件名和要解压到的目录名数组
        </member>
        <member name="P:TCG.Utils.objectHandlers.CurrentPath">
            <summary>
            获得页面文件
            </summary>
        </member>
        <member name="P:TCG.Utils.objectHandlers.CurrentUrl">
            <summary>
            获得当前页面实际地址
            </summary>
        </member>
        <member name="P:TCG.Utils.objectHandlers.RawUrl">
            <summary>
            获得当前页面地址
            </summary>
        </member>
        <member name="P:TCG.Utils.objectHandlers.Referrer">
            <summary>
            获得当前页面来路地址
            </summary>
        </member>
        <member name="P:TCG.Utils.objectHandlers.ServerDomain">
            <summary>
            获得网站域名
            </summary>
        </member>
        <member name="P:TCG.Utils.objectHandlers.UserIp">
            <summary>
            用户的IP
            </summary>
        </member>
        <member name="T:TCG.Utils.objectHandlers.RandEnum">
            <summary>
            设置随机数类型的枚举
            </summary>
        </member>
        <member name="F:TCG.Utils.objectHandlers.RandEnum.Numeric">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:TCG.Utils.objectHandlers.RandEnum.Letter">
            <summary>
            字母
            </summary>
        </member>
        <member name="F:TCG.Utils.objectHandlers.RandEnum.Blend">
            <summary>
            数字字母混合
            </summary>
        </member>
        <member name="F:TCG.Utils.objectHandlers.RandEnum.Chinese">
            <summary>
            汉字
            </summary>
        </member>
        <member name="T:TCG.Utils.ConfigService">
            <summary>
            站点配置信息服务提供者
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.SkinDataBaseInit">
            <summary>
            初始化皮肤数据库连接
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.ManageDataBaseInit">
            <summary>
            初始化皮肤数据库连接
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.TemplateTypesInit">
            <summary>
            设置模版类型
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.BaseConfigInit">
            <summary>
            初始化基本配置信息
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.ManageOutpagesInit">
            <summary>
            初始化特殊页面配置属性
            </summary>
        </member>
        <member name="M:TCG.Utils.ConfigService.GetXmlNotListByTagNameAndFilePath(System.String,System.String)">
            <summary>
            获得XML 节点名相同的元素
            </summary>
            <param name="filepath"></param>
            <param name="tagname"></param>
            <returns></returns>
        </member>
        <member name="P:TCG.Utils.ConfigService.templateTypes">
            <summary>
            管理特殊页面的配置信息
            </summary>
        </member>
        <member name="P:TCG.Utils.ConfigService.SkinDataBaseStr">
            <summary>
            皮肤数据库连接字符串
            </summary>
        </member>
        <member name="P:TCG.Utils.ConfigService.ManageDataBaseStr">
            <summary>
            皮肤数据库连接字符串
            </summary>
        </member>
        <member name="P:TCG.Utils.ConfigService.manageOutpages">
            <summary>
            管理特殊页面的配置信息
            </summary>
        </member>
        <member name="P:TCG.Utils.ConfigService.fileDataBaseConfig">
            <summary>
            文件数据库连接配置
            </summary>
        </member>
        <member name="P:TCG.Utils.ConfigService.ResourceDataBaseConfig">
            <summary>
            资源数据库连接配置
            </summary>
        </member>
        <member name="P:TCG.Utils.ConfigService.baseConfig">
            <summary>
            系统基本配置
            </summary>
        </member>
        <member name="F:TCG.Utils.Cookie.USER_COOKIE">
            <summary>
            前台用户COOKIE名称
            </summary>
        </member>
        <member name="F:TCG.Utils.CachingService.CACHING_ALL_FILECLASS">
            <summary>
            所有文件分类定义
            </summary>
        </member>
        <member name="F:TCG.Utils.CachingService.CACHING_All_TEMPLATES">
            <summary>
            所有模版信息缓存
            </summary>
        </member>
        <member name="F:TCG.Utils.CachingService.CACHING_All_TEMPLATES_ENTITY">
            <summary>
            所有模板实体
            </summary>
        </member>
        <member name="F:TCG.Utils.CachingService.CACHING_All_SYSTEM_TEMPLATES">
            <summary>
            所有系统模版信息
            </summary>
        </member>
        <member name="F:TCG.Utils.CachingService.CACHING_ALL_CATEGORIES">
            <summary>
            所有的资源分类信息DATATABle
            </summary>
        </member>
        <member name="F:TCG.Utils.CachingService.CACHING_ALL_CATEGORIES_ENTITY">
            <summary>
            所有的资源分类信息实体
            </summary>
        </member>
        <member name="P:TCG.Utils.CachingService.SystemCachings">
            <summary>
            系统缓存集合
            </summary>
        </member>
    </members>
</doc>
